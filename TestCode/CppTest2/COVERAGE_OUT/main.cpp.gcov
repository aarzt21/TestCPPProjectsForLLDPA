        -:    0:Source:/home/alex/Desktop/CppTest2/main.cpp
        -:    0:Graph:/home/alex/Desktop/CppTest2/COVERAGE_OUT/OUT-main.gcno
        -:    0:Data:/home/alex/Desktop/CppTest2/COVERAGE_OUT/OUT-main.gcda
        -:    0:Runs:1
        -:    1:#include <iostream>
        -:    2:#include <random>
        -:    3:#include "Calculator.h"
        -:    4:
        2:    5:std::vector<int> generate_random_data(int n, int low, int high, int seed) {
        2:    6:    std::mt19937 gen(seed);
        2:    7:    std::uniform_int_distribution<> distrib(low, high);
        -:    8:
        2:    9:    std::vector<int> data(n);
    20002:   10:    for(int i=0; i<n; ++i) data[i] = distrib(gen);
        -:   11:
        4:   12:    return data;
    =====:   13:}
        -:   14:
        1:   15:int main() {
        1:   16:    auto calc = Calculator();
        1:   17:    calc.set_name("Alex");
        -:   18:
        1:   19:    auto data = generate_random_data(10000, -10, 1000, 432);
        -:   20:
        1:   21:    calc.calculate_result(data);
        -:   22:
     1001:   23:    for (int i = 0; i < 1000; i++)
     1000:   24:        calc.get_result();
        -:   25:
        1:   26:    calc.aggregate(11);
        -:   27:
        1:   28:    std::cout << "Calc res: " << calc.get_result() << std::endl;
        -:   29:
        -:   30:    // test child class ----------------------
        1:   31:    auto child = Child();
        1:   32:    child.set_name("Alex2");
        1:   33:    auto data2 = generate_random_data(10000, -10, 1000, 23);
        1:   34:    child.calculate_result(data2);
     1001:   35:    for (int i = 0; i < 1000; i++)
     1000:   36:            child.get_result();
        -:   37:
        1:   38:    child.aggregate(12);
        -:   39:
        1:   40:    std::cout << "Child res: " << child.get_result() << std::endl;
        -:   41:
        1:   42:    std::cout << "Finished Program" << std::endl;
        -:   43:
        1:   44:    return 0;
        1:   45:}
